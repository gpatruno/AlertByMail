when:
    branch: main
    event: push

variables:
  - &node_image 'node:22'

steps:

  - name: get-version
    image: *node_image
    commands:
      - echo "üîç Extracting version from package.json..."
      - APP_VERSION=$(node -p -e "require('./package.json').version")
      - echo $APP_VERSION
      - echo "APP_VERSION=$APP_VERSION" >> envvars

  - name: audit
    image: *node_image
    commands:
      - echo "üîí Running security audit..."
      - npm i
      - npm audit --production

  - name: lint
    image: *node_image
    commands:
      - echo "üîç Running lint..."
      - npm run lint
    failure: ignore

  - name: node-build
    image: *node_image
    commands:
      - echo "üõ† Building Node..."
      - npm run build --if-present
      
  - name: docker-build
    image: docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      DOCKER_USERNAME:
        from_secret: DOCKER_USERNAME
      DOCKER_PASSWORD:
        from_secret: DOCKER_PASSWORD
    commands:
      - echo "üõ† Building Docker image..."
      - source envvars
      - docker build -t ${CI_REPO_NAME,}:${CI_COMMIT_BRANCH} .
      - echo "üîë Logging in to Docker Hub..."
      - echo $DOCKER_PASSWORD | docker login -u "$DOCKER_USERNAME" --password-stdin
      - echo "üõ† Tag Image"
      - docker tag ${CI_REPO_NAME,}:${CI_COMMIT_BRANCH} ${CI_REPO_OWNER}/${CI_REPO_NAME,}:$APP_VERSION
      - docker tag ${CI_REPO_NAME,}:${CI_COMMIT_BRANCH} ${CI_REPO_OWNER}/${CI_REPO_NAME,}:latest
      - echo "üì§ Pushing Docker image to Docker Hub..."
      - docker push ${CI_REPO_OWNER}/${CI_REPO_NAME,}:$APP_VERSION
      - docker push ${CI_REPO_OWNER}/${CI_REPO_NAME,}:latest
